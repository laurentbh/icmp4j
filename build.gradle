import org.gradle.internal.os.OperatingSystem
import org.gradle.api.publish.ivy.IvyPublication

plugins {
    id 'java'
    id 'ivy-publish' // Apply the Ivy Publish plugin
    id 'maven-publish' // Apply the Maven Publish plugin
}

allprojects {
    group = 'org.icmp4j'
    version = '1.0'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
}

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    manifest {
        attributes 'Implementation-Title': 'Icmp4j',
                'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'net.java.dev.jna', name: 'jna', version: '4.2.1'
    implementation group: 'net.java.dev.jna', name: 'platform', version: '3.5.2'
    testImplementation group: 'junit', name: 'junit', version: '4.+'
}

test {
    testLogging {
        events 'started', 'passed'
    }
    exclude 'org/icmp4j/platform/linux/LinuxNativeBridgeTest.class'
}

// Test Structure

tasks.register('runTestsRoot', Test) {
    dependsOn testClasses
    testLogging {
        events 'started', 'passed'
    }

    include 'org/icmp4j/platform/linux/*.class'

    executable = 'sudo'
}

publishing {
    publications {
        ivyJava(IvyPublication) {
            from components.java
            // Define Ivy-specific attributes if needed
        }
    }

    repositories {
        ivy {
            // Configure your Ivy repository settings here
            // For example:
            url = uri("file:///${projectDir}/repos")
        }
    }
}

tasks.register('lol') {
    doLast {
        if (OperatingSystem.current().isMacOsX()) {
            println("running on OSX")
        } else if (OperatingSystem.current().isLinux()) {
            println("running on Linux")
        }
    }
}

tasks.register('fullJar', Jar) {
    archiveBaseName.set(project.name + '-all')
    from(sourceSets.main.output) {
        exclude '*.dylib'
        exclude '*.so'
    }
    // Store the result into the libs directory
    into("${buildDir}/libs")
}

tasks.register('androidJar', Jar) {
    description 'minimal jar for android'
    archiveBaseName.set(project.name + '-android')
    from(sourceSets.main.output) {
        exclude 'org/icmp4j/platform/java'
        exclude 'org/icmp4j/platform/unix'
        exclude 'org/icmp4j/platform/windows'
        exclude '*.dylib'
        exclude '*.so'
    }
    into("${buildDir}/libs")
}

jar {
    from(sourceSets.main.output) {
        exclude '*.dylib'
        exclude '*.so'
    }
}

tasks.register('runRoot', Exec) {
    dependsOn jar
    executable 'sudo'
    args '-l', "java -cp junit-4.12.jar:hamcrest-core-1.3.jar:icmp4j.jar -Djava.library.path=. org.junit.runner.JUnitCore org.icmp4j.platform.IcmpTraceRouteUtilTest"
}
